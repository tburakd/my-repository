AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Phonebook Application. This template creates Application Load Balancer
  with Auto Scaling Group of Amazon Linux 2 (XXXXXXXXXXXXX) EC2 Instances which host Python Flask Web Application. EC2 instances are placed within WebServerSecurityGroup which allows http (80) connections only from ALBSecurityGroup, and allows tcp(3306) connections only within itself. RDS DB instance is placed within WebServerSecurityGroup so that Database Server can communicate with Web Servers. Application Load Balancer is placed within ALBSecurityGroup which allows http (80) connections from anywhere. WebServerASG Auto Scaling Group is using the WebServerLT Launch Template in order to spin up instances needed. WebServerLT Launch Template is configured to prepare Python Flask environment on EC2, and to deploy Phonebook Application on Flask Server after downloading the app code from Github repository.
Parameters:
  pVPC:
    Description: Select your VPC
    Type: AWS::EC2::VPC::Id

  pKeyName:
    Description: Please enter your Key pair
    Type: AWS::EC2::KeyPair::KeyName

  pSubnetList:
    Description: List of subnets for load balancer
    Type: List<AWS::EC2::Subnet::Id>

Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0dc2d3e4c0f9ebd18
    us-east-2:
      AMI: ami-0233c2d874b811deb
    us-west-1:
      AMI: ami-0ed05376b59b90e46
    us-west-2:
      AMI: ami-0dc8f589abe99f538
    eu-west-1:
      AMI: ami-058b1b7fe545997ae

   
Resources:
  rALBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for Application Load Balancer
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      VpcId: !Ref pVPC

  rWebServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for Flask Server and SSH for getting into EC2
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !GetAtt rALBSG.GroupId
      VpcId: !Ref pVPC


  rTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      TargetType: instance
      Port: 80
      Protocol: HTTP
      VpcId: !Ref pVPC

  rLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap 
         - RegionImageMap
         - !Ref AWS::Region
         - AMI
        InstanceType: t2.micro
        KeyName: !Ref pKeyName
        SecurityGroupIds:
          - !GetAtt rWebServerSG.GroupId
        UserData: 
          Fn::Base64:
            !Sub
              - |
                #!/bin/bash 
                yum update -y
                yum install python3 -y
                pip3 install flask
                pip3 install flask_mysql
                echo "${MyDBURI}" > /home/ec2-user/dbserver.endpoint
                cd /home/ec2-user
                FOLDER="https://raw.githubusercontent.com/tburakd/phonebook_project/master"
                wget "$FOLDER"/phonebook-app.py
                mkdir templates && cd templates
                wget "$FOLDER"/templates/index.html
                wget "$FOLDER"/templates/add-update.html
                wget "$FOLDER"/templates/delete.html
                cd ..
                wget "$FOLDER"/phonebook-app.py
                python3 phonebook-app.py
              - MyDBURI: !GetAtt rDBServer.Endpoint.Address

  rCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref rASG # Required
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 80.0

  rASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        !GetAZs ""
      DesiredCapacity: "2"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref rLT
        Version: !GetAtt rLT.LatestVersionNumber
      MaxSize: "3" # Required
      MinSize: "1" # Required
      TargetGroupARNs:
        - !Ref rTG

  rListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !Ref rTG
          Type: forward
      LoadBalancerArn: !Ref rELB # Required
      Port: 80
      Protocol: HTTP

  rELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
      - !GetAtt rALBSG.GroupId
      Subnets: !Ref pSubnetList
      Type: application
      Tags:
          - Key: Name
            Value: !Sub Web Server of ${AWS::StackName} Stack

  rDBSecGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      GroupDescription: Front-end access to RDS
      DBSecurityGroupIngress:  # Required
        - CIDRIP: 0.0.0.0/0
        - EC2SecurityGroupId: !GetAtt rWebServerSG.GroupId
      EC2VpcId: !Ref pVPC


  rDBServer:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 0
      DBInstanceClass: db.t2.micro # Required
      DBInstanceIdentifier: phonebook-app-db3
      DBName: clarusway_phonebook
      DBSecurityGroups:
        - !Ref rDBSecGroup
      Engine: MySQL
      EngineVersion: 8.0.19
      MasterUserPassword: XXXXXXXXXXXX
      MasterUsername: admin
      MultiAZ: false
      Port: 3306
      PubliclyAccessible: true


Outputs:
  AppUrl:
    Description: URL of the Application
    Value: !Join 
       - ''
       - - 'http://'
         - !GetAtt rELB.DNSName